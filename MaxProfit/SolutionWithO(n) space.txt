
	
	public static int get_max_profit(int [] stock_prices) {
		
		if(stock_prices.length<=1 )return 0;
		int[] max_from_end=new int [stock_prices.length];
		int max_profit=-1;
		/*creating array which saves  for each index of original array 
		the maximum from next index until end of array
		[10, 7, 5, 8,11,9] the original array
		[11,11,11,11,11,9] max_from_end
		*/
		//building the help array- O(n)
		max_from_end[max_from_end.length-1]=stock_prices[stock_prices.length-1];
		for(int i=max_from_end.length-2;i>=0;i--)
		{
			if(stock_prices[i]>max_from_end[i+1])
				max_from_end[i]=stock_prices[i];
			else
				max_from_end[i]=max_from_end[i+1];
						
		}
		//comparing to find couple a and b
		
		for(int i=0;i<stock_prices.length-1;i++)
		{
			if ((max_from_end[i+1]-stock_prices[i])>max_profit)
				max_profit=(max_from_end[i+1]-stock_prices[i]);
		}
		return max_profit>=0?max_profit:0;
			
	}